//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inferno.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class InfernoResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal InfernoResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Inferno.Properties.InfernoResources", typeof(InfernoResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override mission character&apos;s weapons.
        ///Works independently of &apos;MissionCharacterBehaviour&apos; settings..
        /// </summary>
        internal static string ChaosMode_OverrideMissionCharacterWeapon {
            get {
                return ResourceManager.GetString("ChaosMode_OverrideMissionCharacterWeapon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adjust the player&apos;s targetability.
        ///If OFF, the player will be targeted depending on the position relationship with the ped..
        /// </summary>
        internal static string UI_ChaosMode_AttackPlayerCorrection {
            get {
                return ResourceManager.GetString("UI_ChaosMode_AttackPlayerCorrection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Probability of player being targeted..
        /// </summary>
        internal static string UI_ChaosMode_AttackPlayerCorrectionProbability {
            get {
                return ResourceManager.GetString("UI_ChaosMode_AttackPlayerCorrectionProbability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Probability of explosive weapons being forcibly selected..
        /// </summary>
        internal static string UI_ChaosMode_ForceExplosiveWeaponProbability {
            get {
                return ResourceManager.GetString("UI_ChaosMode_ForceExplosiveWeaponProbability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether it affects mission-related characters.
        /// -AffectAllCharacter: Include all mission-related characters.
        /// -ExcludeUniqueCharacter: Exclude named characters and important mission characters.
        /// -ExcludeAllMissionCharacter: Exclude all mission-related characters..
        /// </summary>
        internal static string UI_ChaosMode_MissionCharacterBehaviour {
            get {
                return ResourceManager.GetString("UI_ChaosMode_MissionCharacterBehaviour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override mission character&apos;s weapons.
        ///Works independently of &apos;MissionCharacterBehaviour&apos; settings..
        /// </summary>
        internal static string UI_ChaosMode_OverrideMissionCharacterWeapon {
            get {
                return ResourceManager.GetString("UI_ChaosMode_OverrideMissionCharacterWeapon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Radius of rioting..
        /// </summary>
        internal static string UI_ChaosMode_Radius {
            get {
                return ResourceManager.GetString("UI_ChaosMode_Radius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accuracy of ped&apos;s attack..
        /// </summary>
        internal static string UI_ChaosMode_ShootAccuracy {
            get {
                return ResourceManager.GetString("UI_ChaosMode_ShootAccuracy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Probability of peds firing a gun without regard to whether the line of fire is through or not..
        /// </summary>
        internal static string UI_ChaosMode_StupidShootingRate {
            get {
                return ResourceManager.GetString("UI_ChaosMode_StupidShootingRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Probability of peds changing weapon..
        /// </summary>
        internal static string UI_ChaosMode_WeaponChangeProbability {
            get {
                return ResourceManager.GetString("UI_ChaosMode_WeaponChangeProbability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Probability of peds dropping weapon..
        /// </summary>
        internal static string UI_ChaosMode_WeaponDropProbability {
            get {
                return ResourceManager.GetString("UI_ChaosMode_WeaponDropProbability", resourceCulture);
            }
        }
    }
}
